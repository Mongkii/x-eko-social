
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // User Profiles
    match /users/{userId} {
      allow read: if true; // Public profiles can be read
      allow create: if request.auth != null && request.auth.uid == userId
                    && request.resource.data.username_lowercase == request.resource.data.username.lower();
      allow update: if request.auth != null && request.auth.uid == userId
                    && request.resource.data.username_lowercase == request.resource.data.username.lower();
      // Add delete rule if needed, typically users don't delete their own profiles directly
    }

    // EkoPosts (Voice Posts)
    match /posts/{postId} {
      allow read: if resource.data.visibility == 'public' ||
                     (request.auth != null && resource.data.userId == request.auth.uid) ||
                     // (Future: check for followers-only visibility and follower relationship)
                     false; // Default deny if no condition met
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid
                    && request.resource.data.createdAt == request.time; // Ensure createdAt is server timestamp
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;

      // Comments subcollection (example)
      match /comments/{commentId} {
        allow read: if true; // Or tie to parent post visibility
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid
                      && request.resource.data.createdAt == request.time;
        // Add update/delete for comments if needed
      }
    }

    // ReEkos
    match /reEkos/{reEkoId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid
                    && request.resource.data.createdAt == request.time;
      // ReEkos are typically not updated, only created/deleted
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Reports
    match /reports/{reportId} {
      // Only admins should read all reports. Users can only create.
      allow read: if false; // (Implement admin check later using custom claims)
      allow create: if request.auth != null && request.resource.data.reportingUserId == request.auth.uid
                    && request.resource.data.createdAt == request.time;
    }
  }
}
